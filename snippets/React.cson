".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: import empty()":
    "prefix": "i"
    "body": "import ${1} from '${1}';"

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: import()":
    "prefix": "ir"
    "body": "import React from 'react';"

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: import() with PropTypes":
    "prefix": "irp"
    "body": """
            import React from 'react';
            import PropTypes from 'prop-types';
            """

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: import react-dom()":
    "prefix": "ird"
    "body": "import ReactDOM from 'react-dom';"

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentDidMount() { ... }":
    "prefix": "cdm"
    "body": """
            componentDidMount() {
              ${1}
            }
            """

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentDidUpdate(prevProps, prevState) { ... }":
    "prefix": "cdup"
    "body": """
            componentDidUpdate(prevProps, prevState) {
              ${1}
            }
            """

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentWillMount() { ... }":
    "prefix": "cwm"
    "body": """
            componentWillMount() {
              ${1}
            }
            """

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentWillReceiveProps(nextProps) { ... }":
    "prefix": "cwr"
    "body": """
            componentWillReceiveProps(nextProps) {
              ${1}
            }
            """

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentWillUnmount() { ... }":
    "prefix": "cwun"
    "body": """
            componentWillUnmount() {
              ${1}
            }
            """

".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentWillUpdate(np, ns) { ... }":
    "prefix": "cwu"
    "body": """
            componentWillUpdate(nextProps, nextState) {
              ${1}
            }
            """
            
".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: componentWillUpdate(np, ns) { ... }":
    "prefix": "cwu"
    "body": """
            componentWillUpdate(nextProps, nextState) {
              ${1}
            }
            """
