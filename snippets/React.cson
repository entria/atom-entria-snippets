".source.js, .source.jsx, .source.ts, .source.js-semantic":
  "React: import empty()":
    "prefix": "i"
    "body": "import ${1} from '${1}';"

  "React: import()":
    "prefix": "ir"
    "body": "import React from 'react';"

  "React: import() with PropTypes":
    "prefix": "irp"
    "body": """
            import React from 'react';
            import PropTypes from 'prop-types';
            """

  "React: import react-dom()":
    "prefix": "ird"
    "body": "import ReactDOM from 'react-dom';"

  "React: componentDidMount() { ... }":
    "prefix": "cdm"
    "body": """
            componentDidMount() {
              ${1}
            }
            """

  "React: componentDidUpdate(prevProps, prevState) { ... }":
    "prefix": "cdup"
    "body": """
            componentDidUpdate(prevProps, prevState) {
              ${1}
            }
            """

  "React: componentWillMount() { ... }":
    "prefix": "cwm"
    "body": """
            componentWillMount() {
              ${1}
            }
            """

  "React: componentWillReceiveProps(nextProps) { ... }":
    "prefix": "cwr"
    "body": """
            componentWillReceiveProps(nextProps) {
              ${1}
            }
            """

  "React: componentWillUnmount() { ... }":
    "prefix": "cwun"
    "body": """
            componentWillUnmount() {
              ${1}
            }
            """

  "React: componentWillUpdate(nextProps, nextState) { ... }":
    "prefix": "cwu"
    "body": """
            componentWillUpdate(nextProps, nextState) {
              ${1}
            }
            """

  "React: shouldComponentUpdate(nextProps, nextState) { ... }":
    "prefix": "scu"
    "body": """
            shouldComponentUpdate(nextProps, nextState) {
              ${1}
            }
            """

  "React: cx({ ... })":
    "prefix": "cx"
    "body": """
            cx({
              $1: $2,
            });
            """

  "React: forceUpdate(...)":
    "prefix": "fup"
    "body": "forceUpdate(${1:callback});"

  "React: getDefaultProps() { return {...} }":
    "prefix": "gdp"
    "body": """
            getDefaultProps() {
              return {
                ${1}
              };
            },
            """

  "React: getInitialState() { return {...} }":
    "prefix": "gis"
    "body": """
            getInitialState() {
              return {
                ${1}: ${2}
              };
            },
            """

  "React: isMounted()":
    "prefix": "ism"
    "body": "isMounted()"

  "React: Class.contextTypes = { ... }":
    "prefix": "cct"
    "body": """
            ${1}.contextTypes = {
              ${2}: PropTypes.${3:string}
            };
            """

  "React: Class.propTypes = { ... }":
    "prefix": "cpt"
    "body": """
            ${1}.propTypes = {
              ${2}: PropTypes.${3:string}
            };
            """

  "React: Class.defaultProps = { ... }":
    "prefix": "cdp"
    "body": """
            ${1}.defaultProps = {
              ${2}: ${3}
            };
            """

  "React: static contextTypes = { ... }":
    "prefix": "scct"
    "body": """
            static contextTypes = {
              ${1}: PropTypes.${2:string}
            }
            """

  "React: static propTypes = { ... }":
    "prefix": "scpt"
    "body": """
            static propTypes = {
              ${1}: PropTypes.${2:string}
            }
            """

  "React: static defaultProps = { ... }":
    "prefix": "scdp"
    "body": """
            static defaultProps = {
              ${1}: ${2}
            }
            """

  "React: propTypes { ... }":
    "prefix": "pt"
    "body": """
            propTypes: {
              ${1}: PropTypes.${2:string}
            },
            """

  "React: Class Skeleton":
    "prefix": "cer"
    "body": """
            import React, { Component } from 'react';

            class ${1} extends Component {
              render() {
                return (
                  ${2:<div></div>}
                );
              }
            }

            export default ${1};
            """

  "React: createClass Skeleton":
    "prefix": "rcc"
    "body": """
            import React from 'react';
            export default React.createClass({
              render() {
                return (
                  ${1:<div></div>}
                );
              }
            });
            """

  "React: Stateless Component":
    "prefix": "rsc"
    "body": """
            import React from 'react';
            import PropTypes from 'prop-types';

            const ${1} = ({${2}}) => <div>${4}</div>;


            ${1}.propTypes = {
              ${2}: PropTypes.${3}
            };

            export default ${1};
            """

  "React: Stateless Component Return":
    "prefix": "rscr"
    "body": """
            import React from 'react';
            import PropTypes from 'prop-types';

            const ${1} = ({${2}}) => {
              return <div>${4}</div>
            }

            ${1}.propTypes = {
              ${2}: PropTypes.${3}
            };

            export default ${1};
            """

  "React: Stateless Component Click":
    "prefix": "rscc"
    "body": """
            import React from 'react';
            import PropTypes from 'prop-types';

            const ${1} = ({${2}}) => {
              const handleClick = () => {};

              return <div onClick={handleClick}>${4}</div>;
            }

            ${1}.propTypes = {
              ${2}: PropTypes.${3}
            };

            export default ${1};
            """

  "React: Stateless Component PropTypes":
    "prefix": "rscp"
    "body": """
            import React from 'react';
            import PropTypes from 'prop-types';

            const ${1} = ({${2}}) => <div>${4}</div>;

            ${1}.propTypes = {
              ${2}: PropTypes.${3}
            };

            export default ${1};
            """

  "React: Stateless Function":
    "prefix": "rsf"
    "body": """
            const ${1} = ({${2}}) => <div>{${2}}</div>;
            """

  "React: Stateless Function":
    "prefix": "rsf"
    "body": "const ${1} = ({${2}}) => <div>{${2}}</div>;"

  "React: Component displayName":
    "prefix": "cdn"
    "body": "${1}.displayName = '${1}';"

  "React: render() { return ... }":
    "prefix": "ren"
    "body": """
            render() {
              return ${1:<div></div>};
            }
            """

  "React: setState({ ... })":
    "prefix": "sst"
    "body": """
            this.setState({
              ${1}: ${2}
            });
            """

  "React: this.props.":
    "prefix": "props"
    "body": "this.props.${1}"

  "React: this.state.":
    "prefix": "state"
    "body": "this.state.${1}"

  "React: render(component, container, [callback])":
    "prefix": "rrc"
    "body": """
            React.render(
              ${1:<$2 />},
              ${3:document.body}${4:, ${5:callback}}
            );
            """

  "React: constructor(props)":
    "prefix": "cns"
    "body": """
            constructor(props) {
              super(props);
              this.state = {
                ${1},
              }
            }
            """

  "React: class Foo extends Bar":
    "prefix": "clss"
    "body": """
            class ${1:Foo} extends ${2:React.Component} {
              render() {
                ${3}
              }
            }
            """
